{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","query","setQuery","employees","setEmployees","useEffect","loadEmployees","length","page","limit","a","url","axios","get","then","data","_employees","className","type","value","onChange","event","target","map","employee","name","address","email","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRA4DeA,EAjDH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEkBF,mBAAqB,IAFvC,mBAETG,EAFS,KAEEC,EAFF,KAIhBC,qBAAU,WACRC,EAAc,EAAG,MAChB,IAEHD,qBAAU,WACRC,EAAc,EAAG,GAAIL,EAAMM,OAAS,EAAIN,EAAQ,MAC/C,CAACA,IAEJ,IAAMK,EAAa,uCAAG,WAAOE,EAAcC,GAArB,+BAAAC,EAAA,6DAAoCT,EAApC,+BAA4C,GAC1DU,EADc,2BACYH,EADZ,mBAC2BC,EAD3B,cACsCR,GADtC,SAEKW,IACtBC,IAAgBF,GAChBG,MAAK,qBAAGC,QAJS,OAEdC,EAFc,OAMpBZ,EAAaY,GANO,2CAAH,wDASnB,OACE,sBAAKC,UAAU,MAAf,UACE,sBAAKA,UAAU,cAAf,UACE,uBAAOA,UAAU,qBAAjB,8BACA,uBACEA,UAAU,qBACVC,KAAK,OACLC,MAAOlB,EACPmB,SAAU,SAACC,GAAD,OAAWnB,EAASmB,EAAMC,OAAOH,aAG/C,qBAAKF,UAAU,gBAAf,SACGd,EAAUoB,KAAI,SAACC,GACd,OACE,sBAAKP,UAAU,sBAAf,UACE,qBAAKA,UAAU,2BAAf,SAA2CO,EAASC,OACpD,qBAAKR,UAAU,8BAAf,SACGO,EAASE,UAEZ,qBAAKT,UAAU,4BAAf,SAA4CO,EAASG,oBCrCpDC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9c459e12.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\ntype Employee = {\n  address: string;\n  email: string;\n  id: number;\n  name: string;\n};\n\nconst App = () => {\n  const [query, setQuery] = useState(\"\");\n  const [employees, setEmployees] = useState<Employee[]>([]);\n\n  useEffect(() => {\n    loadEmployees(1, 20);\n  }, []);\n\n  useEffect(() => {\n    loadEmployees(1, 20, query.length > 2 ? query : \"\");\n  }, [query]);\n\n  const loadEmployees = async (page: number, limit: number, query = \"\") => {\n    const url = `/employees?_page=${page}&_limit=${limit}&q=${query}`;\n    const _employees = await axios\n      .get<Employee[]>(url)\n      .then(({ data }) => data);\n\n    setEmployees(_employees);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"search_form\">\n        <label className=\"search_form--label\">Search employees</label>\n        <input\n          className=\"search_form--input\"\n          type=\"text\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        ></input>\n      </div>\n      <div className=\"employee_list\">\n        {employees.map((employee) => {\n          return (\n            <div className=\"employee_list--item\">\n              <div className=\"employee_list--item-name\">{employee.name}</div>\n              <div className=\"employee_list--item-address\">\n                {employee.address}\n              </div>\n              <div className=\"employee_list--item-email\">{employee.email}</div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}